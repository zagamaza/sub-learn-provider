package ru.zagamaza.sublearn.subtitles.service;

import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;
import ru.zagamaza.sublearn.subtitles.client.sublearn.back.NotificationClient;
import ru.zagamaza.sublearn.subtitles.client.sublearn.back.dto.CollectionDto;
import ru.zagamaza.sublearn.subtitles.client.sublearn.back.dto.NotificationDto;
import ru.zagamaza.sublearn.subtitles.client.sublearn.back.dto.NotificationType;
import ru.zagamaza.sublearn.subtitles.client.sublearn.back.dto.UserDto;
import ru.zagamaza.sublearn.subtitles.dto.FoundCollection;

@Service
@RequiredArgsConstructor
public class NotificationService {

    private static final String COLLECTION_UPLOAD = "üéâ –ö–æ–ª–ª–µ–∫—Ü–∏—è *%s* —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞\n–ú–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –µ–µ –≤ —Å–≤–æ–∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö.";
    private static final String COLLECTION_FAIL = "üòì –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –Ω–µ —Å–º–æ–≥–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é *%s*.";


    private final NotificationClient notificationClient;

    public void sendFailNotification(FoundCollection foundCollection, Long userId) {
        NotificationDto notification = NotificationDto.builder()
                                                      .notificationType(NotificationType.MESSAGE)
                                                      .userDto(UserDto.builder().id(userId).build())
                                                      .text(String.format(COLLECTION_FAIL, foundCollection.getTitle()))
                                                      .build();
        notificationClient.create(notification);
    }

    public void sendSuccessNotification(CollectionDto collectionDto, Long userId) {
        NotificationDto notification = NotificationDto.builder()
                                                      .notificationType(NotificationType.MESSAGE)
                                                      .userDto(UserDto.builder().id(userId).build())
                                                      .text(String.format(COLLECTION_UPLOAD, collectionDto.getName()))
                                                      .build();
        notificationClient.create(notification);
    }

}
